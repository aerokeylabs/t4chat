// This file has been generated by Specta. DO NOT EDIT.

export type AnnotationResponse = { title: string; url: string; content: string };

export type CancelMessageRequest = { threadId: string };

export type CancelMessageResponse = { success: boolean };

export type CreateMessageRequest = {
  threadId: string;
  responseMessageId: string;
  model: string;
  modelParams: ModelParamsRequest | null;
  reasoningEffort: ReasoningEffortRequest | null;
};

export type ModelParamsRequest = { reasoningEffort: string; includeSearch: boolean };

export type ModelResponse = {
  id: string;
  slug: string;
  name: string;
  description: string;
  image: boolean;
  reasoning: boolean;
};

export type ReasoningEffortRequest = 'low' | 'medium' | 'high';

export type TestType = { awa: string; wawa: number };

/**
 * ```md
 * |                                            worker
 * |                                            │     process
 * | timestamp                                  │     │     increment
 * | │                                          │     │     │
 * | 111111111111111111111111111111111111111111 11111 11111 111111111111
 * | 63                                        22    17    12          0
 *
 * Max values:
 * worker: 31
 * process: 31
 * increment: 4095
 * ```
 */
export type Snowflake = string;

export const Routes = {
  /**
   * Route for:
   * - POST `message`
   */
  message: () => 'message' as const,

  /**
   * Route for:
   * - POST `message/cancel`
   */
  messageCancel: () => 'message/cancel' as const,

  /**
   * Route for:
   * - GET `models`
   */
  models: () => 'models' as const,
};

Object.freeze(Routes);
